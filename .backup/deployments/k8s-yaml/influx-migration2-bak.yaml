apiVersion: "v1"
kind: Pod
metadata:
  name: "diadata-clusterdev-db-influx-migration2"
  labels:
    app: diadata-clusterdev-db-influx-migration2
spec:
  containers:
  - name: clusterdev-db-influx-migration2
    image: public.ecr.aws/docker/library/influxdb:2.6
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: 8086
      - containerPort: 8088
    command: ["influxd", "--log-level=debug"]
    env:
      - name: DOCKER_INFLUXDB_INIT_MODE
        value: "setup"
      - name: DOCKER_INFLUXDB_INIT_USERNAME
        value: "diadata_user"
      - name: DOCKER_INFLUXDB_INIT_PASSWORD
        value: "diadata_pw"
      - name: DOCKER_INFLUXDB_INIT_ORG
        value: "diadata"
      - name: DOCKER_INFLUXDB_INIT_BUCKET
        value: "diadata_b"
      - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
        value: "diadata_token"
      # - name: INFLUXD_CONFIG_PATH
      #   value: "/etc/influxdb2/config.yml"
      # - name: INFLUXD_BOLT_PATH
      #   value: ""
        # value: /var/lib/influxdb2/influxd.bolt
    volumeMounts:
    # - name: influx-migration2-config
    #   mountPath: /etc/influxdb2/config.yml
    #   subPath: influxdb2.yml
    #   readOnly: true
    - name: influx-migration2-bolt
      mountPath: /var/lib/influxdb2
  volumes:
  - name: influx-migration2-bolt
    emptyDir: {}
  # - name: influx-migration2-config
  #   configMap:
  #     name: influx-migration2-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: clusterdev-db-influx-migration2-service
spec:
  selector:
    app: diadata-clusterdev-db-influx-migration2
  ports:
    - name: influx-migration2
      protocol: TCP
      port: 8086
      targetPort: 8086