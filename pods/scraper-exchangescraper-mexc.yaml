apiVersion: "v1"
kind: Pod
metadata:
  name: "diadata-clusterdev-exchangescraper-collector-mexc"
spec:
  containers:
  - name: clusterdev-exchangescraper-collector-mexc
    image: diadata-clusterdev-exchangescraper-collector:0.1
    command: ["collector"]
    args: ["-exchange=MEXC", "-mode=current", "-pairsfile=true"]
    env:
    - name: USE_ENV
      value: "true"
    - name: POSTGRES_USER
      value: "diadata_psql_user"
    - name: POSTGRES_PASSWORD
      value: "diadata_psql_pass"
    - name: POSTGRES_DB
      value: "diadata_psql_db"
    - name: POSTGRES_HOST
      value: "clusterdev-db-postgres-service.default.svc.cluster.local"
    - name: INFLUXURL
      value: "http://clusterdev-db-influx-service.default.svc.cluster.local:8086"
    - name: INFLUXUSER
      value: "diadata_user"
    - name: INFLUXPASSWORD
      value: "diadata_pw"
    - name: REDISURL
      value: "clusterdev-db-redis-service.default.svc.cluster.local:6379"
    - name: KAFKAURL
      value: "clusterdev-db-kafka-service.default.svc.cluster.local:9094"
  initContainers:
  - name: check-postgres-connection
    image: postgres:latest
    env:
    - name: PGHOST
      value: "clusterdev-db-postgres-service.default.svc.cluster.local"
    - name: PGUSER
      value: "diadata_psql_user"
    - name: PGPASSWORD
      value: "diadata_psql_pass"
    command: ["sh", "-c", "until pg_isready -h $PGHOST -U $PGUSER; do sleep 1; done"]
# ---
# TODO: make code with replicas
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: my-deployment
# spec:
#   selector:
#     matchLabels:
#       app: my-app
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: my-app
#     spec:
#       containers:
#       - name: my-container
#         image: my-image