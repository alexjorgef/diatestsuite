apiVersion: v1
kind: PersistentVolume
metadata:
  name: shared-volume
spec:
  storageClassName: standard
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/pv0001/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-volume-claim
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: psql-extract
#   labels:
#     app: psql-extract
# spec:
#   restartPolicy: Never
#   containers:
#     - name: psql-extract
#       image: diadata.postgres:latest
#       imagePullPolicy: Never
#       ports:
#         - name: psql-extract
#           containerPort: 5432
#       env:
#         - name: POSTGRES_USER
#           value: postgres
#         - name: POSTGRES_DB
#           value: postgres
#         - name: POSTGRES_PASSWORD
#           value: password
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: postgres-load-service
#   labels:
#     app: psql-extract
# spec:
#   ports:
#     - port: 5432
#       targetPort: psql-extract
#   selector:
#     app: psql-extract
#   type: NodePort
# ---
apiVersion: v1
kind: Pod
metadata:
  name: psql-load
spec:
  restartPolicy: Never
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:v1.6.0
    imagePullPolicy: IfNotPresent
    args:
      - "--dockerfile=build/Dockerfile-postgres"
      - "--context=dir:///kaniko-context"
      - "--destination=registry.hub.docker.com/alex1a/diadata.postgres:latest"
    volumeMounts:
      - name: docker-config
        mountPath: /kaniko/.docker
      - name: kaniko-context
        mountPath: /kaniko-context
      - name: shared-volume
        mountPath: /postgres-read
      - name: postgres-pv0003
        mountPath: /kaniko-context/pgdump.sql
        subPath: pgdump.sql
        readOnly: true
  initContainers:
  - name: check-postgres-connection
    image: postgres:15-alpine
    env:
    - name: PGHOST
      value: "postgres.default.svc.cluster.local"
    - name: PGUSER
      value: "postgres"
    - name: PGDB
      value: "postgres"
    - name: PGPASSWORD
      value: "password"
    command: ["sh", "-c", "until pg_isready -h $PGHOST -U $PGUSER; do sleep 1; done"]
  # - name: volume-mount-hack
  #   image: busybox
  #   command: ["sh", "-c", "chown -R postgres:postgres /postgres-dump/"]
  #   volumeMounts:
  #   - name: postgres-dump
  #     mountPath: /postgres-dump
  - name: postgres-extract
    image: postgres:15-alpine
    imagePullPolicy: IfNotPresent
    # ports:
    #   - name: postgres-server
    #     containerPort: 5432
    env:
    # - name: POSTGRES_HOST
    #   value: "127.0.0.1"
    - name: POSTGRES_USER
      value: postgres
    - name: POSTGRES_PASSWORD
      value: password
    - name: POSTGRES_DB
      value: postgres
    - name: PGHOST_EXTRACT
      value: "postgres.default.svc.cluster.local"
    - name: PGUSER_EXTRACT
      value: "postgres"
    - name: PGDB_EXTRACT
      value: "postgres"
    - name: PGPASSWORD_EXTRACT
      value: "password"
    - name: PGHOST_TEMP
      value: "127.0.0.1"
    - name: PGUSER_TEMP
      value: "postgres"
    - name: PGDB_TEMP
      value: "postgres"
    - name: PGPASSWORD_TEMP
      value: "password"
    # args: ["tail -f /dev/null; /postgres-dump/dump-3.sh && /postgres-dump/load-3.sh && pg_dump --host ${PGHOST} --port 5432 --username ${PGUSER} --format plain --column-inserts --data-only --schema public --dbname ${PGDB} > /postgres-dump/db_dump.sql"]
    volumeMounts:
      - name: postgres-dump
        mountPath: /postgres-dump
        readOnly: false
      - name: psql-data
        mountPath: /data/pv0001/
      - name: kaniko-context
        mountPath: /usr/local/bin/docker-entrypoint.sh
        subPath: docker-entrypoint.sh
        readOnly: true
      - name: kaniko-context
        mountPath: /docker-entrypoint-initdb.d/00-pginitscript.sql
        subPath: deployments/config/pginit.sql
        readOnly: true
      - name: kaniko-context
        mountPath: /docker-entrypoint-initdb.d/01-pginitscript.sh
        subPath: dump-3.sh
        readOnly: true
      - name: kaniko-context
        mountPath: /docker-entrypoint-initdb.d/02-pginitscript.sh
        subPath: load-3.sh
        readOnly: true
      - name: postgres-pv0003
        mountPath: /data/pv0003/
      - name: shared-volume
        mountPath: /data/pv0002/
      # - name: kaniko-context
      #   mountPath: /docker-entrypoint-initdb.d/01-pginit.sql
      #   subPath: dump-3.sh
      #   readOnly: true
  volumes:
    - name: docker-config
      projected:
        sources:
        - secret:
            name: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
    - name: postgres-dump
      hostPath:
        path: /mnt/diadata
    - name: kaniko-context
      hostPath:
        path: /mnt/diadata
    - name: postgres-pv0003
      hostPath:
        path: /data/pv0003/
    - name: shared-volume
      persistentVolumeClaim:
        claimName: shared-volume-claim
    - name: psql-data
      emptyDir: {}