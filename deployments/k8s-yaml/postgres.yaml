# apiVersion: v1
# kind: Secret
# metadata:
#   name: postgres-credentials
# type: Opaque
# data:
#   POSTGRES_USER: diadata_psql_user
#   POSTGRES_PASSWORD: diadata_psql_pass
#   POSTGRES_DB: diadata_psql_db
# ---
apiVersion: "v1"
kind: Pod
metadata:
  name: "diadata-clusterdev-db-postgres"
  labels:
    app: diadata-clusterdev-db-postgres
spec:
  containers:
  - name: clusterdev-db-postgres
    image: postgres:15-alpine
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: 5432
    command: ["docker-entrypoint.sh", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    env:
      - name: POSTGRES_USER
        value: diadata_psql_user
    #   valueFrom:
    #     secretKeyRef:
    #       name: postgres-credentials
    #       key: POSTGRES_USER
      - name: POSTGRES_DB
        value: diadata_psql_db
    #   valueFrom:
    #     secretKeyRef:
    #       name: postgres-credentials
    #       key: POSTGRES_DB
      - name: POSTGRES_PASSWORD
        value: diadata_psql_pass
    #   valueFrom:
    #     secretKeyRef:
    #       name: postgres-credentials
    #       key: POSTGRES_PASSWORD
    volumeMounts:
    - name: postgres-config
      mountPath: /etc/postgresql/postgresql.conf
      subPath: postgresql.conf
      readOnly: true
    - name: pginit-config
      mountPath: /docker-entrypoint-initdb.d/pginit.sql
      subPath: pginit.sql
      readOnly: true
    resources:
      limits:
        memory: 512Mi
        cpu: 2
      requests:
        memory: 100Mi
        cpu: 100m
  volumes:
  - name: postgres-config
    configMap:
      name: postgres-configmap
  - name: pginit-config
    configMap:
      name: pginit-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: clusterdev-db-postgres-service
spec:
  selector:
    app: diadata-clusterdev-db-postgres
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: 5432