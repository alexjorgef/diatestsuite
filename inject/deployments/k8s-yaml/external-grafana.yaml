apiVersion: v1
kind: Pod
metadata:
  name: "diadata-clusterdev-grafana"
  labels:
    app: diadata-clusterdev-grafana
spec:
  containers:
    - name: grafana
      image: grafana/grafana:9.3.11
      ports:
        - containerPort: 3000
      volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources-config
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: true
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
          readOnly: true
        - name: grafana-dashboard-a-config
          mountPath: /var/lib/grafana/dashboards
          readOnly: true
  volumes:
    - name: grafana-storage
      emptyDir: {}
    - name: grafana-datasources-config
      configMap:
        name: grafana-datasources-configmap
    - name: grafana-dashboards-config
      configMap:
        name: grafana-dashboards-configmap
    - name: grafana-dashboard-a-config
      configMap:
        name: grafana-dashboard-a-configmap
  initContainers:
    - name: check-postgres-connection
      image: public.ecr.aws/docker/library/postgres:latest
      env:
        - name: PGHOST
          value: "clusterdev-db-postgres-service.default.svc.cluster.local"
        - name: PGUSER
          value: "diadata_psql_user"
        - name: PGPASSWORD
          value: "diadata_psql_pass"
      command:
        ["sh", "-c", "until pg_isready -h $PGHOST -U $PGUSER; do sleep 1; done"]
    - name: check-influxdb-connection
      image: public.ecr.aws/docker/library/influxdb:1.8
      env:
        - name: INFLUXDB_URL
          value: "clusterdev-db-influx-service.default.svc.cluster.local"
        - name: INFLUXDB_USERNAME
          value: "diadata_user"
        - name: INFLUXDB_PASSWORD
          value: "diadata_pw"
      command:
        [
          "sh",
          "-c",
          "until influx -host $INFLUXDB_URL -username $INFLUXDB_USERNAME -password $INFLUXDB_PASSWORD -execute 'SHOW DATABASES'; do sleep 1; done",
        ]
---
apiVersion: v1
kind: Service
metadata:
  name: clusterdev-grafana-service
spec:
  selector:
    app: diadata-clusterdev-grafana
  ports:
    - name: grafana
      protocol: TCP
      port: 3000
      targetPort: 3000
